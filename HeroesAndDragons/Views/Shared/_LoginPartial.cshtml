@using Microsoft.AspNetCore.Identity

    @inject SignInManager<User> SignInManager
    @inject UserManager<User> UserManager

    @if (SignInManager.IsSignedIn(User))
    {
        <form asp-area="" asp-controller="Account" asp-action="LogOff" method="post" id="logoutForm">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Hello @User.Identity.Name!</a>
                </li>
                <li class="nav-item">
                    <button type="submit" class="btn navbar-btn navbar-link text-dark">LogOff</button>
                    @*<input type="submit" class="nav-link btn btn-link text-dark" value="LogOff" />*@
                </li>
            </ul>
        </form>
    }
    else
    {
        <ul class="navbar-nav flex-grow-1">
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
            </li>
        </ul>
    }

@*@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Home" asp-action="Index" title="Manage">Hello @User.Identity.Name!</a>
        </li>
        <li class="nav-item">
            <form method="post" asp-controller="Account" asp-action="LogOff">
                <input type="submit" class="nav-link btn btn-link text-dark" value="LogOff" />
            </form>


            <a class="nav-link text-dark" asp-controller="Account" asp-action="LogOff" id="logoutForm">LogOff</a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>*@

@*@if (User.Identity.IsAuthenticated)
    {
        <br />
        <br />
        <br />
        <p>@User.Identity.Name</p>

        <form method="post" asp-controller="Account" asp-action="LogOff">
            <input type="submit" value="Выход" />
        </form>
    }
    else
    {
        <a asp-controller="Account" asp-action="Login">Вход</a>
        <a asp-controller="Account" asp-action="Register">Регистрация</a>
    }*@

@*@if (User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
        {
            @Html.AntiForgeryToken()

            <ul class="nav navbar-nav navbar-right">
                <li class="nav-link text-dark">
                    @Html.ActionLink("Hello " + User.Identity.Name + "!", "Index", "Home", routeValues: null, htmlAttributes: new { title = "Roles" })
                </li>
                <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
                <li>@Html.ActionLink("Create a new role", "Create", "Roles")</li>
            </ul>
        }
    }
    else
    {
        <ul class="navbar-nav flex-grow-1">
            <li class="nav-item">@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "nav-link text-dark" })</li>
            <li class="nav-item">@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink", @class = "nav-link text-dark" })</li>
        </ul>
    }*@

